{"ast":null,"code":"var _jsxFileName = \"/Users/anuragchoudhary/Desktop/youtube1/src/context/contextApi.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nexport const AppContext = props => {\n  _s();\n  const [mobileMenu, setMobileMenu] = useState(false);\n  const [isToggled, setIsToggled] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(\"New\");\n  useEffect(() => {\n    fetchSelectedCategoryData(selectedCategory);\n  }, [selectedCategory]);\n  const fetchSelectedCategoryData = query => {\n    setLoading(true);\n    fetchDataFromApi(`search/?q=${query}`).then(({\n      contents\n    }) => {\n      console.log(contents);\n      setSearchResults(contents);\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get('http://localhost:7000/api/v1/users/profile', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n          },\n          withCredentials: true\n        });\n        console.log(response.data);\n        setUser(response.data);\n      } catch (err) {\n        console.error('Failed to fetch profile data', err);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      mobileMenu,\n      setMobileMenu,\n      isToggled,\n      setIsToggled,\n      user,\n      setUser,\n      message,\n      selectedCategory,\n      setSelectedCategory\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContext, \"dEhVi1z6ascycu3lN7vy3vf3utk=\");\n_c = AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppContext\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","Context","AppContext","props","_s","mobileMenu","setMobileMenu","isToggled","setIsToggled","message","setMessage","user","setUser","selectedCategory","setSelectedCategory","fetchSelectedCategoryData","query","setLoading","fetchDataFromApi","then","contents","console","log","setSearchResults","fetchUserProfile","response","get","headers","Authorization","localStorage","getItem","withCredentials","data","err","error","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anuragchoudhary/Desktop/youtube1/src/context/contextApi.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const Context = createContext();\n\nexport const AppContext = (props) => {\n  \n  const [mobileMenu, setMobileMenu] = useState(false);\n  const [isToggled, setIsToggled] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(\"New\");\n\n\n  useEffect(() => {\n    fetchSelectedCategoryData(selectedCategory);\n}, [selectedCategory]);\n\nconst fetchSelectedCategoryData = (query) => {\n    setLoading(true);\n    fetchDataFromApi(`search/?q=${query}`).then(({ contents }) => {\n        console.log(contents);\n        setSearchResults(contents);\n        setLoading(false);\n    });\n};\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get('http://localhost:7000/api/v1/users/profile', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n          },\n          withCredentials: true,\n        });\n        console.log(response.data);\n        setUser(response.data);\n      } catch (err) {\n        console.error('Failed to fetch profile data', err);\n      }\n    };\n\n    fetchUserProfile();\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        \n        mobileMenu,\n        setMobileMenu,\n        isToggled,\n        setIsToggled,\n        user,\n        setUser,\n        message,\n        selectedCategory, setSelectedCategory\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,OAAO,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAG/DC,SAAS,CAAC,MAAM;IACdkB,yBAAyB,CAACF,gBAAgB,CAAC;EAC/C,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,MAAME,yBAAyB,GAAIC,KAAK,IAAK;IACzCC,UAAU,CAAC,IAAI,CAAC;IAChBC,gBAAgB,CAAC,aAAaF,KAAK,EAAE,CAAC,CAACG,IAAI,CAAC,CAAC;MAAEC;IAAS,CAAC,KAAK;MAC1DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBG,gBAAgB,CAACH,QAAQ,CAAC;MAC1BH,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAECpB,SAAS,CAAC,MAAM;IACd,MAAM2B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,4CAA4C,EAAE;UAC7EC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;UAC9D,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFV,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACO,IAAI,CAAC;QAC1BpB,OAAO,CAACa,QAAQ,CAACO,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZZ,OAAO,CAACa,KAAK,CAAC,8BAA8B,EAAED,GAAG,CAAC;MACpD;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA,CAACC,OAAO,CAACkC,QAAQ;IACfC,KAAK,EAAE;MAEL/B,UAAU;MACVC,aAAa;MACbC,SAAS;MACTC,YAAY;MACZG,IAAI;MACJC,OAAO;MACPH,OAAO;MACPI,gBAAgB;MAAEC;IACpB,CAAE;IAAAuB,QAAA,EAEDlC,KAAK,CAACkC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEvB,CAAC;AAACrC,EAAA,CA1DWF,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}