{"ast":null,"code":"var _jsxFileName = \"/Users/anuragchoudhary/Desktop/youtube1/src/Components/UpdateCoverImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateCoverImage = () => {\n  _s();\n  const [coverImage, setCoverImage] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.put('http://localhost:7000/api/v1/users/profile', {\n        coverImage\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        withCredentials: true\n      });\n      setMessage('Cover Image updated successfully');\n    } catch (error) {\n      setMessage('Failed to update cover image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Cover Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: coverImage,\n        onChange: e => setCoverImage(e.target.value),\n        placeholder: \"New Cover Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Cover Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateCoverImage, \"RO2TtNC2gLvyXFCg5wZbSUJixWs=\");\n_c = UpdateCoverImage;\nexport default UpdateCoverImage;\nvar _c;\n$RefreshReg$(_c, \"UpdateCoverImage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdateCoverImage","_s","coverImage","setCoverImage","message","setMessage","handleSubmit","event","preventDefault","put","headers","Authorization","localStorage","getItem","withCredentials","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/anuragchoudhary/Desktop/youtube1/src/Components/UpdateCoverImage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UpdateCoverImage = () => {\n  const [coverImage, setCoverImage] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.put('http://localhost:7000/api/v1/users/profile', { coverImage }, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\n        withCredentials: true,\n      });\n      setMessage('Cover Image updated successfully');\n    } catch (error) {\n      setMessage('Failed to update cover image');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Update Cover Image</h3>\n      {message && <p>{message}</p>}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={coverImage}\n          onChange={(e) => setCoverImage(e.target.value)}\n          placeholder=\"New Cover Image URL\"\n        />\n        <button type=\"submit\">Update Cover Image</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateCoverImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMX,KAAK,CAACY,GAAG,CAAC,4CAA4C,EAAE;QAAEP;MAAW,CAAC,EAAE;QAC5EQ,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QAAG,CAAC;QAC3EC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFT,UAAU,CAAC,kCAAkC,CAAC;IAChD,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdV,UAAU,CAAC,8BAA8B,CAAC;IAC5C;EACF,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BhB,OAAO,iBAAIL,OAAA;MAAAiB,QAAA,EAAIZ;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA;MAAMsB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BjB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,UAAW;QAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAqB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhCID,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}